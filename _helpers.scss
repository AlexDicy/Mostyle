.inline-block {
    display: inline-block;
}


// Make IE10 support "hidden"
[hidden] {
    display: none !important; 
}

// Material Design shadows
.shadow-0 {
    box-shadow: none;
}
.shadow-1 {
    box-shadow: $box-shadow-1;
}
.shadow-2 {
    box-shadow: $box-shadow-2;
}
.shadow-3 {
    box-shadow: $box-shadow-3;
}
.shadow-4 {
    box-shadow: $box-shadow-4;
}
.shadow-5 {
    box-shadow: $box-shadow-5;
}

// margins and paddings
@each $prop, $abbr in (margin: m, padding: p) {
    @each $name, $space in $spaces {
        
        .#{$abbr}-#{$name} {
            #{$prop}: $space !important;
        }
        .#{$abbr}-t-#{$name} {
            #{$prop}-top: $space !important;
        }
        .#{$abbr}-b-#{$name} {
            #{$prop}-bottom: $space !important;
        }
        .#{$abbr}-l-#{$name} {
            #{$prop}-left: $space !important;
        }
        .#{$abbr}-r-#{$name} {
            #{$prop}-right: $space !important;
        }
    }
}

.float-left {
    float: left!important;
}

.float-right {
    float: right!important;
}

.float-none {
    float: none!important;
}

.row {
    display: flex;
    flex-wrap: wrap;
    margin-right: ($padding-container-width / -2);
    margin-left: ($padding-container-width / -2);
}

@each $breakpoint in map-keys($screen-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $screen-breakpoints);

    // Allow columns to stretch full width below their breakpoints
    @for $i from 1 through 12 {
        .col#{$infix}-#{$i} {
            position: relative;
            width: 100%;
            padding-right: ($padding-container-width / 2);
            padding-left: ($padding-container-width / 2);
        }
    }
    .col#{$infix},
    .col#{$infix}-auto {
        position: relative;
        width: 100%;
        padding-right: ($padding-container-width / 2);
        padding-left: ($padding-container-width / 2);
    }

    @include media-breakpoint-up($breakpoint, $screen-breakpoints) {
        // Provide basic `.col-{breakpoint}` classes for equal-width flexbox columns
        .col#{$infix} {
            flex-basis: 0;
            flex-grow: 1;
            max-width: 100%;
        }
        .col#{$infix}-auto {
            flex: 0 0 auto;
            width: auto;
            max-width: none; // Reset earlier grid tiers
        }

        @for $i from 1 through 12 {
            .col#{$infix}-#{$i} {
                @include make-col($i, 12);
            }
        }

        .order#{$infix}-first {
            order: -1;
        }

        @for $i from 1 through 12 {
            .order#{$infix}-#{$i} {
                order: $i;
            }
        }

        // `$columns - 1` because offsetting by the width of an entire row isn't possible
        @for $i from 0 through (12 - 1) {
            @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
                .offset#{$infix}-#{$i} {
                    @include make-col-offset($i, 12);
                }
            }
        }
    }
}


@for $i from 0 through 10 {
    .br-#{$i} {
        -webkit-border-radius: #{$i}px;
        -moz-border-radius: #{$i}px;
        border-radius: #{$i}px;
    }
}


.message-disappear {
    max-height: 1000px;
    -webkit-animation: disappear 5s; /* Safari 4.0 - 8.0 */
    -webkit-animation-delay: 5s; /* Safari 4.0 - 8.0 */
    animation: disappear 5s;
    animation-delay: 5s;
    animation-fill-mode: forwards;
}

/* Safari 4.0 - 8.0 */
@-webkit-keyframes disappear {
    to {
        max-height: 0;
    }
}

@keyframes disappear {
    to {
        max-height: 0;
    }
}